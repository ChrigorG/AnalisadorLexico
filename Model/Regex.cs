using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using System.Threading.Tasks;

namespace AnalisadorLexico.Model
{
    class Regex
    {
        List<String> keyWords;
        public Regex()
        {
            keyWords = new List<String>()
            {
                "unit",
                "interface",
                "implementation",
                "public",
                "private",
                "protected",
                "function",
                "begin",
                "end",
                "and",
                "array",
                "case",
                "const",
                "div",
                "downto",
                "else",
                "file",
                "for",
                "goto",
                "if",
                "in",
                "label",
                "mod",
                "nil",
                "not",
                "of",
                "or",
                "packed",
                "procedure",
                "program",
                "record",
                "repeat",
                "set",
                "then",
                "to",
                "type",
                "until",
                "var",
                "while",
                "with",
                "absolute",
                "abstract",
                "assembler",
                "automated",
                "break",
                "cdecl",
                "continue",
                "default",
                "deprecated",
                "dispose",
                "exit",
                "export",
                "external",
                "far",
                "finalization",
                "finalized",
                "forward",
                "inline",
                "interface",
                "interrupt",
                "library",
                "message",
                "near",
                "new",
                "nodefault",
                "overload",
                "override",
                "pascal",
                "platform",
                "published",
                "read",
                "readonly",
                "register",
                "reintroduce",
                "requires",
                "resident",
                "safecall",
                "sealed",
                "stdcall",
                "strict",
                "threadvar",
                "try",
                "uses",
                "varargs",
                "virtual",
                "write",
                "as",
                "asm",
                "class",
                "constructor",
                "destructor",
                "do",
                "external",
                "false",
                "file",
                "finalization",
                "finally",
                "goto",
                "if",
                "implementation",
                "in",
                "inherited",
                "initialization",
                "is",
                "label",
                "library",
                "nil",
                "not",
                "object",
                "operator",
                "or",
                "packed",
                "program",
                "property",
                "raise",
                "record",
                "repeat",
                "resourcestring",
                "self",
                "set",
                "shl",
                "shr",
                "string",
                "then",
                "true",
                "type",
                "unit",
                "until",
                "uses",
                "var",
                "while",
                "with",
                "xor",
                "Integer",
                "Real",
                "Boolean",
                "Char",
                "String",
                "ShortInt",
                "SmallInt",
                "LongInt",
                "Int64",
                "Byte",
                "Word",
                "LongWord",
                "UInt64",
                "Single",
                "Double",
                "Extended",
                "Currency",
                "AnsiChar",
                "AnsiString",
                "ShortString",
                "WideChar",
                "WideString",
                "UnicodeString"
            };
        }
    }
}
